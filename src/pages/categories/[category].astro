---
import PostArchiveLayout from "../../layouts/PostArchiveLayout.astro";
import I18nKeys from "../../locales/keys";
import { i18n } from "../../locales/translation";
import { GetCategories, type Archive } from "../../utils/content";

export async function getStaticPaths() {
  const categories = await GetCategories();
  const categoryList = Array.from(categories.keys());
  return categoryList.map((category) => ({
    params: { category: category },
  }));
}

const categories = await GetCategories();
const { category } = Astro.params;

/**
 * Formats an archive map of posts associated with a specified category.
 *
 * The function retrieves a list of posts and groups them by their publication
 * year, storing them in a Map where each key is a year (number) and the value
 * is an array of posts. It also retrieves the categoryâ€™s display name.
 *
 * @returns An object containing:
 *     - archiveMap {Map<number, Array<Archive>>} A map of year to array of posts.
 *     - categoryName {string} The display-friendly name of the category.
 */
async function FormatArchiveMap() {
  const posts = categories.get(category)!.posts;
  const categoryName = categories.get(category)!.name;
  const archiveMap = new Map<number, Array<Archive>>();
  posts.forEach((post) => {
    const year = post.date.getFullYear();
    if (archiveMap.has(year)) archiveMap.get(year)!.push(post);
    else archiveMap.set(year, [post]);
  });
  return { archiveMap, categoryName };
}

const { archiveMap, categoryName } = await FormatArchiveMap();
---

<PostArchiveLayout
  archiveMap={archiveMap}
  title={categoryName}
  subTitle={i18n(I18nKeys.pages_categories_archive)}
/>
